    5 00:4080 -  -  -  -  
    6 00:4080 DB 06 -  -  	in a, (6)
    7 00:4082 21 8D 40 -  	ld hl, hookstuff
    8 00:4085 EF -  -  -  	rst 28h
    9 00:4086 26 50 -  -  	.dw $5026
   10 00:4088 CD 50 00 27 
              40 -  -  -  	bjump(_JForceCmdNoChar) ;ret
   11 00:408D -  -  -  -  hookstuff:
   12 00:408D 83 -  -  -  	.db 83h             ; Required for all hooks
   13 00:408E B7 -  -  -  	or a ;cp 0
   14 00:408F 20 19 -  -  	jr nz, ReturnZ
   15 00:4091 ED 5B 5B 96 	ld de, (965bh) ;searching for '='
   16 00:4095 2A 5F 96 -  	ld hl, (965fh)
   17 00:4098 B7 -  -  -  	or a
   18 00:4099 ED 52 -  -  	sbc hl, de
   19 00:409B 45 -  -  -  	ld b, l
   20 00:409C EB -  -  -  	ex de, hl
   21 00:409D 04 -  -  -  	inc b
   22 00:409E -  -  -  -  SearchLoop:
   23 00:409E 7E -  -  -  	ld a, (hl)
   24 00:409F FE 6A -  -  	cp tEQ ;'='
   25 00:40A1 28 09 -  -  	jr z, SearchFound
   26 00:40A3 FE 3E -  -  	cp tColon ;':' if running in a program, needs to see if command is done (':' is newline)
   27 00:40A5 28 03 -  -  	jr z, SearchFailed
   28 00:40A7 23 -  -  -  	inc hl
   29 00:40A8 10 F4 -  -  	djnz SearchLoop 
   30 00:40AA -  -  -  -  SearchFailed:
   31 00:40AA -  -  -  -  ReturnZ:
   32 00:40AA BF -  -  -  	cp a
   33 00:40AB C9 -  -  -  	ret
   34 00:40AC -  -  -  -  SearchFound:
   35 00:40AC ED 5B 5F 96 	ld de, (965fh) ;checking if no argument on either side of '='
   36 00:40B0 B7 -  -  -  	or a
   37 00:40B1 ED 52 -  -  	sbc hl, de
   38 00:40B3 C8 -  -  -  	ret z
   39 00:40B4 19 -  -  -  	add hl, de
   40 00:40B5 ED 5B 5B 96 	ld de, (965bh)
   41 00:40B9 B7 -  -  -  	or a
   42 00:40BA ED 52 -  -  	sbc hl, de
   43 00:40BC C8 -  -  -  	ret z
   44 00:40BD 45 -  -  -  	ld b, l ;checking first half of equation
   45 00:40BE 19 -  -  -  	add hl, de
   46 00:40BF EB -  -  -  	ex de, hl
   47 00:40C0 3E 58 -  -  	ld a, tX ;'X'
   48 00:40C2 FD CB 21 FE 	set 7, (iy+asm_flag1)
   49 00:40C6 -  -  -  -  check1loop:
   50 00:40C6 BE -  -  -  	cp (hl)
   51 00:40C7 28 07 -  -  	jr z, FoundCheck1Loop
   52 00:40C9 23 -  -  -  	inc hl
   53 00:40CA 10 FA -  -  	djnz check1loop
   54 00:40CC FD CB 21 BE 	res 7, (iy+asm_flag1)
   55 00:40D0 -  -  -  -  FoundCheck1Loop:
   56 00:40D0 2A 5F 96 -  	ld hl, (965fh) ;checking second half of equation
   57 00:40D3 B7 -  -  -  	or a
   58 00:40D4 ED 52 -  -  	sbc hl, de
   59 00:40D6 45 -  -  -  	ld b, l
   60 00:40D7 13 -  -  -  	inc de
   61 00:40D8 19 -  -  -  	add hl, de
   62 00:40D9 EB -  -  -  	ex de, hl
   63 00:40DA 3E 58 -  -  	ld a, tX ;'X'
   64 00:40DC FD CB 21 F6 	set 6, (iy+asm_flag1)
   65 00:40E0 -  -  -  -  check2loop:
   66 00:40E0 BE -  -  -  	cp (hl)
   67 00:40E1 28 07 -  -  	jr z, FoundCheck2Loop
   68 00:40E3 23 -  -  -  	inc hl
   69 00:40E4 10 FA -  -  	djnz check2loop
   70 00:40E6 FD CB 21 B6 	res 6, (iy+asm_flag1)
   71 00:40EA -  -  -  -  FoundCheck2Loop:
   72 00:40EA -  -  -  -  	
   73 00:40EA 21 FF 40 -  	ld hl, Ans
   74 00:40ED E7 -  -  -  	rst 20h
   75 00:40EE D7 -  -  -  	rst 10h
   76 00:40EF EF -  -  -  	rst 28h ;my B_CALLs seem to be broken... rst 28h/.dw [name] is the same thing
   77 00:40F0 51 43 -  -  	.dw _DelVar
   78 00:40F2 21 04 00 -  	ld hl, 4 ;length of answer string
   79 00:40F5 EF -  -  -  	rst 28h
   80 00:40F6 27 43 -  -  	.dw _CreateStrng ;de points to location of string; copy stuff into it
   81 00:40F8 21 FF 40 -  	ld hl, Ans
   82 00:40FB E7 -  -  -  	rst 20h
   83 00:40FC F6 01 -  -  	or 1    ; set NZ
   84 00:40FE C9 -  -  -  	ret
   85 00:40FF -  -  -  -  Ans:
   86 00:40FF 04 72 00 00 	.db StrngObj, tAns, 0, 0
