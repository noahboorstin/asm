.NOLIST
#define   EQU   .equ
#define   equ   .equ
#define   END   .end
#define   end   .end
#include "ti83plus.inc"
#define times 3 ;if this changes, change other thing
#define length 5

	.org 9D93h
	.db $BB,$6D
	B_CALL(_ClrLCDFull)
	LD HL, $8F25
	LD (DispVar), HL
	LD C, 4
Beginning:
	CALL Display
	.db %00100000 ;if these change, change the variables at the top
	.db %10101000
	.db %11111000
Key:
	PUSH BC
	B_CALL(_GetKey)
	POP BC
	CP kLeft
	JR Z, Left
	CP kDown
	RET Z
	JR Key
Left:
	DEC C
	LD A, C
	CP 3
	JR NZ, Go
	LD A, (DispVar)
	INC A
	OUT ($10), A
	LD A, (DispVar+1)
	OUT ($10), A
	LD A, 0
	LD B, times
Clear:
	OUT ($11), A
	DJNZ Clear	
Go:
	CP -1
	JR NZ, Beginning
	LD C, 7
	LD A, (DispVar)
	DEC A
	LD (DispVar), A
	JR Beginning
Display:
	LD HL, $ length FE
	LD (DispQuit), HL ;letting program be run a second time next time around
	LD A, 58
	LD (ShiftDirection+1), A ;changs SRD D back to itself
	POP HL
	LD A, (DispVar)
DispSecond:
	OUT ($10), A
	LD A, (DispVar+1)
	OUT ($10), A
	LD B, times
DispLoop:
	LD D, (HL)
	INC HL
	LD A, C
	CP 0
DispShift:
	JR Z, DoneShift
ShiftDirection:
	SRL D
	DEC A
	JR DispShift
DoneShift:
	LD A, D
	OUT ($11), A
	DJNZ DispLoop ;done displaying first half; now checking if next thing...
	LD A, 8
	SUB C
DispQuit:
	CP length
	JP NC, DispRet
	LD BC, times-1
	SBC HL, BC
	LD C, A
	LD A, 34
	LD (ShiftDirection+1), A ;changes SRL D to SLA D
	LD A, 79
	LD (DispQuit), A
	LD A, $E9
	LD (DispQuit+1), A ;making sure it can't display a second byte more than 1 time
	LD A, (DispVar)
	INC A
	JR DispSecond
DispRet:
	JP (HL)
DispVar:
	.db 0, 0
end 